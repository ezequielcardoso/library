<PUBLIC:COMPONENT>
<PUBLIC:ATTACH EVENT="onclick" ONEVENT="doclick()" />
<PUBLIC:ATTACH EVENT="ondocumentready" ONEVENT="doInit()" />
<PUBLIC:ATTACH EVENT="onblur" ONEVENT="doBlur()" />
<PUBLIC:method name="format" internalname="doBlur"/>
<PUBLIC:ATTACH EVENT="onpropertychange" ONEVENT="doPropertychange()" />
<PUBLIC:EVENT NAME="onExit" ID="onExit" />
<PUBLIC:METHOD NAME="hidePanel"/>
<PUBLIC:property name="width" value=""/>/*宽度*/
<PUBLIC:property name="height" value=""/>/*高度*/

<script language="javascript">
var show=false;
var random = randomChar(10);
var dateInputId = (!isEmpty(element.id))? element.id: "dateInput"+random;
var dateIframeId = dateInputId + random;
var dateIframe = null;
var iframeWidth=220;
var iframeHeight=212;

function doInit(){
  if(element.width!=""){
    element.style.width=element.width;
  }
  if(element.height!=""){
    element.style.height=element.height;
  }
  element.maxLength=10;
  element.id=dateInputId;
}

function doBlur(){
   element.value = toDate(element.value);
   if(!show){
    onExit.fire();
   }
}

function doPropertychange(){
  element.runtimeStyle.color=(!isDate(element.value))?'red':'';
}

function doclick(){
  if(show) return;
  dateIframe=window.document.createElement("IFRAME");
  element.parentElement.appendChild(dateIframe);
  dateIframe.id=dateIframeId;
  with (dateIframe){
    src="about:blank";
 	  style.position="absolute";
 	  style.margin=0;
 	  width=iframeWidth;
 	  height=iframeHeight;
 	  style.display="none";
  }
  createDateDocument();
  showPanel();
}

function createDateDocument(){
  var now = new Date();
  var nowYear = now.getFullYear();
  var nowMonth = now.getMonth()+1;
  var nowDay = now.getDate();
  var today = toDate(nowYear+"-"+nowMonth+"-"+nowDay);
  var inputDate = convertDate(element.value);
  var inputYear = inputDate.getFullYear();
  var inputMonth = inputDate.getMonth()+1;
  var inputDay = inputDate.getDate();
  var iframeDoc = window.frames[dateIframeId].document.open("text/html", "replace");
 	var months = new Array("1月","2月","3月","4月","5月","6月","7月","8月","9月","10月","11月","12月");

  with(iframeDoc){
  	 writeln("<html>");
  	 writeln("<head>");

  	 writeln("<style>");
  	 writeln(".btn{");
  	 writeln("font: 宋体;");
  	 writeln("font-size: 9pt;");
  	 writeln("height: 20px;");
  	 writeln("border:#2c59aa 1px solid;");
  	 writeln("cursor:hand;");
  	 writeln("background-color:#C3DAF9;");
  	 writeln("}");

  	 writeln("body{");
  	 writeln("scroll: no;");
  	 writeln("margin: 0px;");
  	 writeln("border: none;");
  	 writeln("overflow: hidden;");
  	 writeln("}");
  	 writeln("<\/style>");

  	 writeln("<script>");

    writeln("var gcToggle = '#ffffff';");
    writeln("var previousObject = null;");
    writeln("var gdCtrl = new Object();");
    writeln("var giYear = "+inputYear+";");
    writeln("var giMonth = "+inputMonth+";");
    writeln("var giDay = "+inputDay+";");
    writeln("var gCalMode = '';");
    writeln("var gCalDefDate = '';");
    writeln("var CAL_MODE_NOBLANK = '2'; ");
    writeln("var nowYear = "+nowYear);
    writeln("var nowMonth = "+nowMonth);
    writeln("var nowDay = "+nowDay);
    writeln("var gridbg = '#C3DAF9';");
    writeln("var gcGray = '#808080';");

    writeln("function fPrevYear(){");
    writeln("		var selectindex=tbSelYear.selectedIndex-1;");
    writeln("		var iYear = tbSelYear.options[selectindex].value;");
    writeln("		var iMon = tbSelMonth.value;");
    writeln("	  fSetYearMon(iYear, iMon);");
    writeln("}");

    writeln("function fNextYear(){");
    writeln("		var selectindex=tbSelYear.selectedIndex+1;");
    writeln("		var iYear = tbSelYear.options[selectindex].value;");
    writeln("		var iMon = tbSelMonth.value;");
    writeln("  fSetYearMon(iYear, iMon);");
    writeln("}");

    writeln("function fPrevMonth(){");
    writeln("	 var iMon = tbSelMonth.value;");
    writeln("	 var iYear = tbSelYear.value;");
    writeln("	 if (--iMon<1) {");
    writeln("		  iMon = 12;");
    writeln("		  iYear--;");
    writeln("	 }");
    writeln("	 fSetYearMon(iYear, iMon);");
    writeln("}");

    writeln("function fNextMonth(){");
    writeln("  var iMon = tbSelMonth.value;");
    writeln("  var iYear = tbSelYear.value;");
    writeln("  if (++iMon>12) {");
    writeln("	  iMon = 1;");
    writeln("	  iYear++;");
    writeln("  }");
    writeln("	 fSetYearMon(iYear, iMon);");
    writeln("}");

    writeln("function fSetSelected(aCell){");
    writeln("  var iOffset = 0;");
    writeln("  var iYear = parseInt(tbSelYear.value);");
    writeln("  var iMonth = parseInt(tbSelMonth.value);");
    writeln("  aCell.bgColor = gridbg;");
    writeln("  with (aCell.children[\"cellText\"]){");
    writeln("   	var iDay = parseInt(innerText);");
    writeln("   	if (color==gcGray)");
    writeln(" 			iOffset = (Victor<10)?-1:1;");
    writeln("	  	if( color == gcGray ){");
    writeln("			    iOffset = (iDay < 15 )?1:-1;");
    writeln("		  }");
    writeln("		  iMonth += iOffset;");
    writeln("		  if (iMonth<1) {");
    writeln("			   iYear--;");
    writeln("			   iMonth = 12;");
    writeln("		  }else if (iMonth>12){");
    writeln("			   iYear++;");
    writeln("			   iMonth = 1;");
    writeln("	  	}");
    writeln("	 }");
    writeln("	 fSetDate(iYear, iMonth, iDay);");
    writeln("}");

    writeln("function fSetDate(iYear, iMonth, iDay){");
    writeln("  var returnDate=''");
    writeln("  if ((iYear == 0) && (iMonth == 0) && (iDay == 0)){");
    writeln("   	returnDate = \"\";");
    writeln("  }else{");
    writeln("    iMonth = iMonth + 100 + \"\";");
    writeln("    iMonth = iMonth.substring(1);");
    writeln("    iDay   = iDay + 100 + \"\";");
    writeln("    iDay   = iDay.substring(1); ");
    writeln("    returnDate = iYear+\"-\"+iMonth+\"-\"+iDay;");
    writeln("  }");
    writeln("  var inputDate=parent.document.getElementById('"+dateInputId+"') ");
    writeln("  inputDate.value=returnDate");
    writeln("  inputDate.hidePanel();");
    writeln("  inputDate.focus() ");
    writeln("}");

    writeln("function fSetYearMon(iYear, iMon){ ");
    writeln("  tbSelMonth.options[iMon-1].selected = true; ");
    writeln("  for (i = 0; i < tbSelYear.length; i++) ");
    writeln("		if (tbSelYear.options[i].value == iYear) ");
    writeln("			tbSelYear.options[i].selected = true; ");
    writeln("  fUpdateCal(iYear, iMon); ");
    writeln("} ");

    writeln("function fBuildCal(iYear, iMonth) { ");
    writeln("  var aMonth=new Array();");
    writeln("  for(i=1;i<7;i++)");
    writeln("   	aMonth[i]=new Array(i);");
    writeln("  var dCalDate=new Date(iYear, iMonth-1, 1);");
    writeln("  var iDayOfFirst=dCalDate.getDay();");
    writeln("	 var iDaysInMonth=new Date(iYear, iMonth, 0).getDate();");
    writeln("	 var iOffsetLast=new Date(iYear, iMonth-1, 0).getDate()-iDayOfFirst+1;");
    writeln("	 var iDate = 1;");
    writeln("	 var iNext = 1;");
    writeln("	 for (d = 0; d < 7; d++)");
    writeln("		  aMonth[1][d] = (d<iDayOfFirst)?-(iOffsetLast+d):iDate++;");
    writeln("	 for (w = 2; w < 7; w++)");
    writeln("	  	for (d = 0; d < 7; d++)");
    writeln("			   aMonth[w][d] = (iDate<=iDaysInMonth)?iDate++:-(iNext++);");
    writeln("	 return aMonth;");
    writeln("}");


    writeln(" function fUpdateCal(iYear, iMonth) { ");
    writeln("   myMonth = fBuildCal(iYear, iMonth);  ");
    writeln(" 	  var i = 0;  ");
    writeln(" 	  for (w = 0; w < 6; w++) ");
    writeln(" 		for (d = 0; d < 7; d++) ");
    writeln(" 			with (cellText[(7*w)+d]) {  ");
    writeln(" 				Victor = i++;   ");
    writeln(" 				if (myMonth[w+1][d]<0) { ");
    writeln(" 					color = gcGray; ");
    writeln(" 					innerText = -myMonth[w+1][d];");
    writeln(" 				}else{");
    writeln(" 					if( d == 0 ){");
    writeln(" 						color = \"red\";");
    writeln(" 					}else if( d == 6 ){ ");
    writeln(" 						color = \"blue\";");
    writeln(" 					}else{ ");
    writeln(" 						color = \"black\";  ");
    writeln(" 					} ");
    writeln(" 					innerText = myMonth[w+1][d];	");
    writeln(" 				}");
    writeln(" 				if(iYear==giYear&&iMonth==giMonth&&myMonth[w+1][d]==giDay){");
    writeln(" 					parentElement.bgColor=\"highlight\";");
    writeln(" 					color=\"white\"		;");
    writeln(" 				}");
    writeln(" 				else{");
    writeln("  				  if(iYear==nowYear&&iMonth==nowMonth&&myMonth[w+1][d]==nowDay){");
    writeln(" 					  parentElement.bgColor=\"yellow\";");
    writeln(" 				  }");
    writeln(" 				  else{");
    writeln(" 					  parentElement.bgColor=\"\";");
    writeln(" 				  }");
    writeln(" 				}");
    writeln(" 			}");
    writeln(" 		var selectIndex=tbSelYear.selectedIndex;");
    writeln(" 		var beginValue=parseInt(tbSelYear.options[0].value,10);");
    writeln(" 		var endValue=parseInt(tbSelYear.options[tbSelYear.options.length-1].value,10);");
    writeln(" 		if(selectIndex>50){");
    writeln(" 			for(var i=1;i<=selectIndex-50;i++){");
    writeln(" 				tbSelYear.options.remove(0);");
    writeln("   	  	var objOption = document.createElement(\"OPTION\");");
    writeln("     		tbSelYear.options.add(objOption);");
    writeln("     		objOption.innerText = (endValue+i)+\"年\";");
    writeln("     		objOption.value = endValue+i;");
    writeln(" 			}");
    writeln(" 		}");
    writeln(" 		if(selectIndex<50){");
    writeln(" 			for(var i=1;i<=50-selectIndex;i++){");
    writeln(" 				tbSelYear.options.remove(tbSelYear.options.length-1);");
    writeln("   	  	var objOption = document.createElement(\"OPTION\");");
    writeln("     		tbSelYear.options.add(objOption,0);");
    writeln("     		objOption.innerText = (beginValue-i)+\"年\";");
    writeln("     		objOption.value = beginValue-i;");
    writeln(" 			}");
    writeln(" 		}	");
    writeln("  }");

  	 writeln("function setRedColor(){");
  	 writeln("  var obj=event.srcElement;");
  	 writeln("	obj.style.color=\"red\"; ");
  	 writeln("}");

  	 writeln("function setBlackColor(){ ");
  	 writeln("  var obj=event.srcElement; ");
  	 writeln("	obj.style.color=\"black\"; ");
  	 writeln("}  ");

  	 writeln("function setRuntimeColor(obj,p_status){ ");
  	 writeln("	if(p_status){ ");
  	 writeln("		obj.runtimeStyle.backgroundColor=gcToggle; ");
  	 writeln("		obj.children(0).runtimeStyle.color='black'; ");
  	 writeln("	} ");
  	 writeln("	else{ ");
  	 writeln("		obj.runtimeStyle.backgroundColor='';  ");
  	 writeln("		obj.children(0).runtimeStyle.color='';	 ");
  	 writeln("	}  ");
  	 writeln("}  ");

  	 writeln("	function fPopCalendar(popCtrl, dateCtrl, mode, defDate){ ");
  	 writeln("		gCalMode = mode; ");
  	 writeln("		gCalDefDate = defDate; ");

  	 writeln("	  if (popCtrl == previousObject){ ");
  	 writeln("		  	if (VicPopCal.style.visibility == 'visible'){ ");
  	 writeln("	  		return true; ");
  	 writeln("	  	} ");
  	 writeln("	  } ");
  	 writeln("	  previousObject = popCtrl; ");
  	 writeln("	  gdCtrl = dateCtrl; ");
  	 writeln("	  fSetYearMon(giYear, giMonth); ");
  	 writeln("		if( gCalMode == CAL_MODE_NOBLANK ){ ");
  	 writeln("			document.all.CAL_B_BLANK.style.visibility = 'hidden'; ");
  	 writeln("		}else{");
  	 writeln("			document.all.CAL_B_BLANK.style.visibility = 'visible'; ");
  	 writeln("		} ");
  	 writeln("	} ");

  	 writeln("<\/script>");
  	 writeln("<\/head>");
  	 writeln("<body>");
	   writeln("<Div id='VicPopCal' style='border: 1px solid #225DB6;OVERFLOW:hidden;width:"+iframeWidth+";height:"+iframeHeight+";'>");
	   writeln("  <table border='0'  width='100%' height='100%' bgcolor='#C3DAF9' style='filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=0, StartColorStr=#FFFFFF, EndColorStr=#9DBCEA );'>");
	   writeln("    <TR>");
	   writeln("      <td valign='middle' align='center'>");
	   writeln("        <table border='0' ><tr>");
	   writeln("           <td align='center' style='cursor:hand;font-size:9pt;font-family:webdings;' title='减少一年'  onMouseOver='setRedColor()' onMouseOut='setBlackColor()' onclick='fPrevYear()'>7<\/td>");
	   writeln("           <td><SELECT name='tbSelYear' style='font: 宋体;'   onChange='fUpdateCal(tbSelYear.value, tbSelMonth.value)' Victor='Won'>");
	   for(i=inputYear-50;i<=inputYear+50;i++){
	     if(i==inputYear){
		      writeln("<OPTION value='"+i+"' selected>"+i+"年<\/OPTION>");
		    }
		    else{
		      writeln("<OPTION value='"+i+"'>"+i+"年<\/OPTION>");
		    }
    }
    writeln("<\/SELECT><\/td>");
	   writeln("<td align='center' style='cursor:hand;font-size:9pt;font-family:webdings;' title='增加一年' onMouseOver='setRedColor()' onMouseOut='setBlackColor()' onclick='fNextYear()'>8<\/td>");
	   writeln("<td width='10'>&nbsp;<\/td>");
	   writeln("<td align='center' style='cursor:hand;font-size:9pt;font-family:webdings;' title='减少一月' onMouseOver='setRedColor()' onMouseOut='setBlackColor()' onclick='fPrevMonth()'>7<\/td>");
	   writeln("<td><select name='tbSelMonth' style='font: 宋体;'  onChange='fUpdateCal(tbSelYear.value, tbSelMonth.value)' Victor='Won'>");
	   for (i=0; i<12; i++){
	     if((i+1)==inputMonth){
		      writeln("<option value='"+(i+1)+"' selected>"+months[i]+"<\/option>");
		    }
		    else{
		      writeln("<option value='"+(i+1)+"'>"+months[i]+"<\/option>");
		    }
    }
    writeln("<\/SELECT>");
	   writeln("<td align='center' style='cursor:hand;font-size:9pt;font-family:webdings;' title='增加一月' onMouseOver='setRedColor()' onMouseOut='setBlackColor()'  onclick='fNextMonth()'>8<\/td>");
	   writeln("<\/tr><\/table>");
   	writeln("<\/td>");
	   writeln("<\/TR><TR>");
	   writeln("<td align='center'>");
	   writeln("<table width='100%' border='1' bordercolor='#7F9DB9' style='border-collapse:collapse;'>");

    var iCellHeight=20;
 	  var WeekDay = new Array("日","一","二","三","四","五","六");
	   var styleTD = "  valign='middle' align='center' height='"+iCellHeight+"' style='font-size:12px;";
 		 writeln("<tr bgcolor='#C1D2EE'"+ styleTD +";font-weight:bold'>");
	 	 for(i=0; i<7; i++) {
		 	  writeln("<td>" + WeekDay[i] + "</td>");
			 }
		  writeln("</tr>");

	   for (w = 1; w < 7; w++) {
			   writeln("<tr " + styleTD + ";cursor:hand'>");
			   for (d = 0; d < 7; d++) {
				    writeln("<td id='calCell' onMouseOver='setRuntimeColor(this,true)' onMouseOut='setRuntimeColor(this,false)' title='点击取值' onclick='fSetSelected(this)'>");
				    writeln("<font id=cellText ><b> </b></font>");
				    writeln("</td>")
			   }
			   writeln("</tr>");
		  }
 
	   writeln("<\/table>");
	   writeln("<\/td>");
	   writeln("<\/TR><TR ><TD align='center'>");
	   writeln("<table border='0' width='100%'><tr><td align='center'>")
	   //去掉清空按钮
	   //writeln("<input id='CAL_B_BLANK'onfocus='blur()' type='button' value='清空' onclick='fSetDate(0,0,0)' class='btn' style='width:80'>");
	   writeln("<input id='CAL_B_BLANK'type='hidden' >");
	   writeln("<\/td>");
	   writeln("<td align='center'>");
	   //去掉今天日期按钮
	   //writeln("<input onfocus='blur()' type='button' value='今天"+today+"' onclick='fSetDate(nowYear,nowMonth,nowDay)' class='btn' style='width:120'>");
	   writeln("<input type='hidden'>"); 
	   writeln("<\/td>");
	   writeln("<\/tr><\/table>");
	   writeln("<\/TD><\/TR>");
	   writeln("<\/TABLE>");
	   writeln("<\/Div>");

  	 writeln("<script>fPopCalendar(document.all.txt1, document.all.txt1);<\/script>");
  	 writeln("<\/body>");
  	 writeln("<\/html>");
  }
  iframeDoc.close();
}

function domousedown(){
  if(!show) return;
  var src=event.srcElement;
 	if(element.contains(src))return;
 	if(dateIframe!=null && dateIframe.contains(src))return;
 	hidePanel();
}

function hidePanel() {
  window.document.detachEvent('onmousedown',domousedown);
  element.parentElement.removeChild(dateIframe);
  dateIframe=null;
  show=false;
}

function showPanel(){
  window.document.attachEvent('onmousedown',domousedown);
	 dateIframe.style.display='block';
	 var pos=LostinetWebCalcPosition(dateIframe, element);
	 pos.top=pos.top+element.offsetHeight;
	 LostinetWebAdjustMirror(dateIframe, element, pos);
	 dateIframe.style.left=pos.left;
	 dateIframe.style.top=pos.top;
	 show=true;
}

function isEmpty(input) {
  return (input == null || input.length == 0)
}

function isDate(input){
    if(isEmpty(input))  return false;
    var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/;
    var result = input.match(reg);
    if(result == null)return false;
    var date = new Date(result[1],result[3]-1,result[4])
    return ((date.getFullYear()==parseInt(result[1],10))
          &&(date.getMonth()==parseInt(result[3],10)-1)
          &&(date.getDate()==parseInt(result[4],10)));
}

function toDate(input){
    if(isEmpty(input))  return "";
    var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/;
    var result = input.match(reg);
    if(result == null)return "";
    var date = new Date(result[1],result[3]-1,result[4])
    if((date.getFullYear()==parseInt(result[1],10))
     &&(date.getMonth()==parseInt(result[3],10)-1)
     &&(date.getDate()==parseInt(result[4],10))){
        var year=date.getFullYear().toString(10);
        var month=(date.getMonth()+1<10) ? "0"+(date.getMonth()+1).toString(10) : (date.getMonth()+1).toString(10);
        var day=(date.getDate()<10) ? "0"+date.getDate().toString(10) : date.getDate().toString(10);
        return year + result[2] + month + result[2] + day;
    }
    else{
      return "";
    }
}

function convertDate(str){
  var reg = /^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/;
  var result = str.match(reg);
  return (isDate(str))? new Date(result[1],result[3]-1,result[4]):new Date();
}


function randomChar(len){
  if (len == null) len = 10;
  var str = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  var char=new Array(36);
  var randomString = "";
  for(var i=0;i<36;i++){
    char[i]=str.charAt(i);
  }
  for(var i=0;i<len;i++){
    randomString+=char[Math.round((Math.random() * 35))];
  }
  return randomString;
}

function LostinetWebGetScrollPostion(e){
	var b=e.document.body;
	if(e==b)return {left:0,top:0};
	with(e.getBoundingClientRect()){
		return {left:b.scrollLeft+left,top:b.scrollTop+top};
	}
}

function LostinetWebGetClientPosition(e){
	var b=e.document.body;
	if(e==b)return {left:-b.scrollLeft,top:-b.scrollTop};
	with(e.getBoundingClientRect()){
		return {left:left-b.clientLeft,top:top-b.clientTop};
	}
}

function LostinetWebGetStandParent(e){
	for(var p=e.parentElement;p!=null;p=p.parentElement)	{
		var sp=p.currentStyle.position;
		if(sp=='absolute'||sp=='relative')
			return p;
	}
	return e.document.body;
}

function LostinetWebCalcPosition(floate,e){
	var epos=LostinetWebGetScrollPostion(e);
	var spos=LostinetWebGetScrollPostion(LostinetWebGetStandParent(floate));
	var s=LostinetWebGetStandParent(floate);
	return {left:epos.left-spos.left-s.clientLeft,top:epos.top-spos.top-s.clientTop};
}

function LostinetWebAdjustMirror(floate,e,pos){
	var cw=e.document.body.clientWidth;
	var ch=e.document.body.clientHeight;
	var fw=floate.offsetWidth;
	var fh=floate.offsetHeight;
	var ew=e.offsetWidth;
	var eh=e.offsetHeight;

	var ecpos=LostinetWebGetClientPosition(e);
	var empos={left:ecpos.left+ew/2,top:ecpos.top+eh/2};
	var pcpos=LostinetWebGetClientPosition(LostinetWebGetStandParent(floate));
	var fcpos=LostinetWebGetClientPosition(floate);
	var fmpos={left:pcpos.left+pos.left+fw/2,top:pcpos.top+pos.top+fh/2};

	if( (fmpos.left<empos.left) ? ((fmpos.left-fw/2<0)&&((empos.left*2-fmpos.left)+fw/2<=cw)) : ((fmpos.left+fw/2>cw)&&((empos.left*2-fmpos.left)-fw/2>=0)) )
		fmpos.left=empos.left*2-fmpos.left;

	if( (fmpos.top<empos.top) ? ((fmpos.top-fh/2<0)&&((empos.top*2-fmpos.top)+fh/2<=ch)) : ((fmpos.top+fh/2>ch)&&((empos.top*2-fmpos.top)-fh/2>=0)) )
		fmpos.top=empos.top*2-fmpos.top;

	pos.left=fmpos.left-pcpos.left-fw/2;
	pos.top=fmpos.top-pcpos.top-fh/2;
}

</script>

</PUBLIC:COMPONENT>